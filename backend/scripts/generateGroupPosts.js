const mongoose = require("mongoose");
const Group = require("../models/Group");
const Post = require("../models/Post");
const User = require("../models/User");

mongoose.connect("mongodb://localhost:27017/mxh", {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

// Danh s√°ch n·ªôi dung m·∫´u cho b√†i vi·∫øt trong group
const groupPostTemplates = {
  "C·ªông ƒë·ªìng Developer Vi·ªát Nam": [
    {
      text: "Chia s·∫ª kinh nghi·ªám l√†m vi·ªác v·ªõi React Native üöÄ",
      images: [
        "https://images.unsplash.com/photo-1633356122544-f134324a6cee?auto=format&fit=crop&w=800&q=60",
        "https://images.unsplash.com/photo-1607799279861-4dd421887fb3?auto=format&fit=crop&w=800&q=60"
      ]
    },
    {
      text: "Review kh√≥a h·ªçc Machine Learning tr√™n Coursera üìö",
      images: [
        "https://images.unsplash.com/photo-1591453089816-0fbb971b454c?auto=format&fit=crop&w=800&q=60"
      ]
    },
    {
      text: "Tips v√† tricks khi l√†m vi·ªác v·ªõi Docker üê≥",
      background: "https://images.unsplash.com/photo-1605745341112-85968b19335b?auto=format&fit=crop&w=800&q=60"
    }
  ],
  "Design Community Vietnam": [
    {
      text: "Color Palette ƒë·∫πp cho d·ª± √°n m·ªõi üé®",
      images: [
        "https://images.unsplash.com/photo-1523821741446-edb2b68bb7a0?auto=format&fit=crop&w=800&q=60",
        "https://images.unsplash.com/photo-1513542789411-b6a5d4f31634?auto=format&fit=crop&w=800&q=60"
      ]
    },
    {
      text: "Review tablet v·∫Ω XP-Pen Artist Pro 16 ‚úèÔ∏è",
      images: [
        "https://images.unsplash.com/photo-1574375927938-d5a98e8ffe85?auto=format&fit=crop&w=800&q=60"
      ]
    },
    {
      text: "Xu h∆∞·ªõng thi·∫øt k·∫ø UI/UX 2024 üåü",
      background: "https://images.unsplash.com/photo-1545235617-7a424c1a60cc?auto=format&fit=crop&w=800&q=60"
    }
  ],
  "C·ªông ƒë·ªìng √Çm nh·∫°c Vi·ªát Nam": [
    {
      text: "Review audio interface m·ªõi üéµ",
      images: [
        "https://images.unsplash.com/photo-1598488035139-bdbb2231ce04?auto=format&fit=crop&w=800&q=60",
        "https://images.unsplash.com/photo-1520523839897-bd0b52f945a0?auto=format&fit=crop&w=800&q=60"
      ]
    },
    {
      text: "Tips mix nh·∫°c cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu üéß",
      images: [
        "https://images.unsplash.com/photo-1516280440614-37939bbacd81?auto=format&fit=crop&w=800&q=60"
      ]
    },
    {
      text: "Cover nh·∫°c c√πng nhau cu·ªëi tu·∫ßn üé∏",
      background: "https://images.unsplash.com/photo-1511379938547-c1f69419868d?auto=format&fit=crop&w=800&q=60"
    }
  ],
  "Y√™u B·∫øp - C·ªông ƒë·ªìng ·∫®m th·ª±c": [
    {
      text: "C√¥ng th·ª©c b√°nh m√¨ m·ªõi th·ª≠ üçû",
      images: [
        "https://images.unsplash.com/photo-1509440159596-0249088772ff?auto=format&fit=crop&w=800&q=60",
        "https://images.unsplash.com/photo-1549931319-a545dcf3bc73?auto=format&fit=crop&w=800&q=60"
      ]
    },
    {
      text: "Review n·ªìi chi√™n kh√¥ng d·∫ßu üç≥",
      images: [
        "https://images.unsplash.com/photo-1544441893-675973e31985?auto=format&fit=crop&w=800&q=60"
      ]
    },
    {
      text: "Menu n·∫•u ƒÉn cho ng∆∞·ªùi b·∫≠n r·ªôn üç±",
      background: "https://images.unsplash.com/photo-1547592180-85f173990554?auto=format&fit=crop&w=800&q=60"
    }
  ],
  "C·ªông ƒë·ªìng Th·ªÉ thao Vi·ªát Nam": [
    {
      text: "L·ªãch t·∫≠p gym cho ng∆∞·ªùi m·ªõi üí™",
      images: [
        "https://images.unsplash.com/photo-1534438327276-14e5300c3a48?auto=format&fit=crop&w=800&q=60",
        "https://images.unsplash.com/photo-1583454110551-21f2fa2afe61?auto=format&fit=crop&w=800&q=60"
      ]
    },
    {
      text: "Review gi√†y ch·∫°y b·ªô m·ªõi üëü",
      images: [
        "https://images.unsplash.com/photo-1542291026-7eec264c27ff?auto=format&fit=crop&w=800&q=60"
      ]
    },
    {
      text: "Tips stretching ƒë√∫ng c√°ch üßò‚Äç‚ôÇÔ∏è",
      background: "https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?auto=format&fit=crop&w=800&q=60"
    }
  ]
};

// H√†m t·∫°o th·ªùi gian ng·∫´u nhi√™n trong kho·∫£ng 30 ng√†y g·∫ßn ƒë√¢y
function getRandomDate() {
  const now = new Date();
  const thirtyDaysAgo = new Date(now - 30 * 24 * 60 * 60 * 1000);
  return new Date(thirtyDaysAgo.getTime() + Math.random() * (now - thirtyDaysAgo));
}

// H√†m l·∫•y ng·∫´u nhi√™n n ph·∫ßn t·ª≠ t·ª´ m·ªôt m·∫£ng
function getRandomElements(array, n) {
  const shuffled = [...array].sort(() => 0.5 - Math.random());
  return shuffled.slice(0, n);
}

async function main() {
  try {
    // L·∫•y danh s√°ch groups v√† users
    const groups = await Group.find({});
    const posts = [];

    // T·∫°o b√†i vi·∫øt cho m·ªói nh√≥m
    for (const group of groups) {
      const templates = groupPostTemplates[group.group_name];
      if (!templates) continue;

      // L·∫•y danh s√°ch th√†nh vi√™n c·ªßa nh√≥m
      const members = group.members.map(m => m.user);

      // T·∫°o c√°c b√†i vi·∫øt t·ª´ template
      for (const template of templates) {
        // Ch·ªçn ng·∫´u nhi√™n m·ªôt th√†nh vi√™n ƒë·ªÉ ƒëƒÉng b√†i
        const poster = members[Math.floor(Math.random() * members.length)];

        const post = new Post({
          type: "group",
          text: template.text,
          user: poster,
          group: group._id,
          createdAt: getRandomDate(),
          background: template.background || null,
          images: template.images ? template.images.map(url => ({ url })) : []
        });

        posts.push(post);
      }
    }

    // X√≥a b√†i vi·∫øt c≈© v√† l∆∞u b√†i vi·∫øt m·ªõi
    await Post.deleteMany({ type: "group" });
    const savedPosts = await Post.insertMany(posts);

    console.log(`ƒê√£ t·∫°o ${savedPosts.length} b√†i vi·∫øt cho c√°c nh√≥m!`);
  } catch (error) {
    console.error("L·ªói:", error);
  } finally {
    mongoose.connection.close();
  }
}

main(); 